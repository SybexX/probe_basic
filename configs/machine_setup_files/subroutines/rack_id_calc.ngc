(author: Chris P, Lcvette)
(version: 0.1)
(date: 02/8/25)

(This sub will write user parameters to the var file and ui widgets)
(Determine ATC Rack Position, Pocket Order, and Clearance Direction)
(Requires Pockets to be aligned parallel with X or Y Axis Travels)

o<rack_id_calc> sub

  #<rack_traverse_speed_3981> = #1 (0)
  #<rack_z_load_height_3982> = #2 (0)
  #<rack_safe_z_height_3983> = #3 (0)
  #<rack_pocket_1_x_3984> = #4 (0)
  #<rack_pocket_1_y_3985> = #5 (0)
  #<rack_pocket_2_x_3986> = #6 (0)
  #<rack_pocket_2_y_3987> = #7 (0)
  #<pocket_1_x_clearance_3988> = #8 (0)
  #<pocket_1_y_clearance_3989> = #9 (0)
  #<rack_atc_user_1_3975> = #10 (0)
  #<rack_atc_user_2_3976> = #11 (0)
  #<rack_atc_user_3_3977> = #12 (0)
  #<rack_atc_user_4_3978> = #13 (0)
  #<rack_atc_user_5_3979> = #14 (0)

  #3975 = #<rack_atc_user_1_3975>
  #3976 = #<rack_atc_user_2_3976>
  #3977 = #<rack_atc_user_3_3977>
  #3978 = #<rack_atc_user_4_3978>
  #3979 = #<rack_atc_user_5_3979>
  #3981 = #<rack_traverse_speed_3981>
  #3982 = #<rack_z_load_height_3982>
  #3983 = #<rack_safe_z_height_3983>
  #3984 = #<rack_pocket_1_x_3984>
  #3985 = #<rack_pocket_1_y_3985>
  #3986 = #<rack_pocket_2_x_3986>
  #3987 = #<rack_pocket_2_y_3987>
  #3988 = #<pocket_1_x_clearance_3988>
  #3989 = #<pocket_1_y_clearance_3989>

  (Initialize ALL variables first)
  #3980 = 0
  #<pocket_order> = 0
  #<clearance_direction> = 0
  #<rack_id> = 0
  #<temp> = 0

  (Check for duplicate pocket positions)
  o110 if [#<rack_pocket_1_x_3984> EQ #<rack_pocket_2_x_3986>]
    o111 if [#<rack_pocket_1_y_3985> EQ #<rack_pocket_2_y_3987>]
      (MSG, "Error: Duplicate pocket positions detected!")
      #3980 = 0
      (DEBUG, EVAL[vcp.getWidget{"atc_rack_id"}.setValue{#3980}])
      o<rack_id_calc> return
    o111 endif
  o110 endif

  (Check if row is parallel to the Y-axis)
  o120 if [#<rack_pocket_1_x_3984> EQ #<rack_pocket_2_x_3986>]
    (MSG, "Row is parallel to Y-axis")

    (Determine pocket order)
    o121 if [#<rack_pocket_2_y_3987> GT #<rack_pocket_1_y_3985>]
      #<pocket_order> = 1 (-Y to +Y)
    o121 else
      #<pocket_order> = 2 (+Y to -Y)
    o121 endif

    (Determine clearance direction - MUST be in X)
    o122 if [#<pocket_1_x_clearance_3988> GT #<rack_pocket_1_x_3984>]
      #<clearance_direction> = 1 (+X)
    o122 elseif [#<pocket_1_x_clearance_3988> LT #<rack_pocket_1_x_3984>]
      #<clearance_direction> = 2 (-X)
    o122 else
      (MSG, "Error: Clearance direction must be perpendicular to pocket row!")
      #3980 = 0
      (DEBUG, EVAL[vcp.getWidget{"atc_rack_id"}.setValue{#3980}])
      o<rack_id_calc> return
    o122 endif

    (Assign rack_id - break down calculation steps)
    #<temp> = [#<pocket_order> - 1]
    #<temp> = [#<temp> * 2]
    #<temp> = [#<temp> + #<clearance_direction>]
    #<rack_id> = #<temp>
    #3980 = #<rack_id>
    (DEBUG, EVAL[vcp.getWidget{"atc_rack_id"}.setValue{#3980}])
    o<rack_id_calc> return
  o120 endif

  (Check if row is parallel to the X-axis)
  o130 if [#<rack_pocket_1_y_3985> EQ #<rack_pocket_2_y_3987>]
    (MSG, "Row is parallel to X-axis")

    (Determine pocket order)
    o131 if [#<rack_pocket_2_x_3986> GT #<rack_pocket_1_x_3984>]
      #<pocket_order> = 1 (-X to +X)
    o131 else
      #<pocket_order> = 2 (+X to -X)
    o131 endif

    (Determine clearance direction - MUST be in Y)
    o132 if [#<pocket_1_y_clearance_3989> GT #<rack_pocket_1_y_3985>]
      #<clearance_direction> = 1 (+Y)
    o132 elseif [#<pocket_1_y_clearance_3989> LT #<rack_pocket_1_y_3985>]
      #<clearance_direction> = 2 (-Y)
    o132 else
      (MSG, "Error: Clearance direction must be perpendicular to pocket row!")
      #3980 = 0
      (DEBUG, EVAL[vcp.getWidget{"atc_rack_id"}.setValue{#3980}])
      o<rack_id_calc> return
    o132 endif
    
    (Assign rack_id - break down calculation steps)
    #<temp> = [#<pocket_order> - 1]
    #<temp> = [#<temp> * 2]
    #<temp> = [#<temp> + #<clearance_direction>]
    #<temp> = [#<temp> + 4]
    #<rack_id> = #<temp>
    #3980 = #<rack_id>
    (DEBUG, EVAL[vcp.getWidget{"atc_rack_id"}.setValue{#3980}])
    o<rack_id_calc> return
    
  o130 endif

  (MSG, "Error: No Conditions Met, Rack ID Not Set")
  #3980 = 0
  (DEBUG, EVAL[vcp.getWidget{"atc_rack_id"}.setValue{#3980}])

o<rack_id_calc> endsub

M2
